// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/events (interfaces: PreWorkflowHooksCommandRunner)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_pre_workflows_hooks_command_runner.go -package=mocks . PreWorkflowHooksCommandRunner
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	events "github.com/runatlantis/atlantis/server/events"
	command "github.com/runatlantis/atlantis/server/events/command"
	gomock "go.uber.org/mock/gomock"
)

// MockPreWorkflowHooksCommandRunner is a mock of PreWorkflowHooksCommandRunner interface.
type MockPreWorkflowHooksCommandRunner struct {
	ctrl     *gomock.Controller
	recorder *MockPreWorkflowHooksCommandRunnerMockRecorder
	isgomock struct{}
}

// MockPreWorkflowHooksCommandRunnerMockRecorder is the mock recorder for MockPreWorkflowHooksCommandRunner.
type MockPreWorkflowHooksCommandRunnerMockRecorder struct {
	mock *MockPreWorkflowHooksCommandRunner
}

// NewMockPreWorkflowHooksCommandRunner creates a new mock instance.
func NewMockPreWorkflowHooksCommandRunner(ctrl *gomock.Controller) *MockPreWorkflowHooksCommandRunner {
	mock := &MockPreWorkflowHooksCommandRunner{ctrl: ctrl}
	mock.recorder = &MockPreWorkflowHooksCommandRunnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPreWorkflowHooksCommandRunner) EXPECT() *MockPreWorkflowHooksCommandRunnerMockRecorder {
	return m.recorder
}

// RunPreHooks mocks base method.
func (m *MockPreWorkflowHooksCommandRunner) RunPreHooks(ctx *command.Context, cmd *events.CommentCommand) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunPreHooks", ctx, cmd)
	ret0, _ := ret[0].(error)
	return ret0
}

// RunPreHooks indicates an expected call of RunPreHooks.
func (mr *MockPreWorkflowHooksCommandRunnerMockRecorder) RunPreHooks(ctx, cmd any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunPreHooks", reflect.TypeOf((*MockPreWorkflowHooksCommandRunner)(nil).RunPreHooks), ctx, cmd)
}
