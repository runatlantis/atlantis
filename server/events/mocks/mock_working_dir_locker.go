// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/events (interfaces: WorkingDirLocker)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_working_dir_locker.go -package=mocks . WorkingDirLocker
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockWorkingDirLocker is a mock of WorkingDirLocker interface.
type MockWorkingDirLocker struct {
	ctrl     *gomock.Controller
	recorder *MockWorkingDirLockerMockRecorder
	isgomock struct{}
}

// MockWorkingDirLockerMockRecorder is the mock recorder for MockWorkingDirLocker.
type MockWorkingDirLockerMockRecorder struct {
	mock *MockWorkingDirLocker
}

// NewMockWorkingDirLocker creates a new mock instance.
func NewMockWorkingDirLocker(ctrl *gomock.Controller) *MockWorkingDirLocker {
	mock := &MockWorkingDirLocker{ctrl: ctrl}
	mock.recorder = &MockWorkingDirLockerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorkingDirLocker) EXPECT() *MockWorkingDirLockerMockRecorder {
	return m.recorder
}

// TryLock mocks base method.
func (m *MockWorkingDirLocker) TryLock(repoFullName string, pullNum int, workspace, path string) (func(), error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TryLock", repoFullName, pullNum, workspace, path)
	ret0, _ := ret[0].(func())
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TryLock indicates an expected call of TryLock.
func (mr *MockWorkingDirLockerMockRecorder) TryLock(repoFullName, pullNum, workspace, path any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TryLock", reflect.TypeOf((*MockWorkingDirLocker)(nil).TryLock), repoFullName, pullNum, workspace, path)
}
