// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/events (interfaces: PostWorkflowHooksCommandRunner)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_post_workflows_hooks_command_runner.go -package=mocks . PostWorkflowHooksCommandRunner
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	events "github.com/runatlantis/atlantis/server/events"
	command "github.com/runatlantis/atlantis/server/events/command"
	gomock "go.uber.org/mock/gomock"
)

// MockPostWorkflowHooksCommandRunner is a mock of PostWorkflowHooksCommandRunner interface.
type MockPostWorkflowHooksCommandRunner struct {
	ctrl     *gomock.Controller
	recorder *MockPostWorkflowHooksCommandRunnerMockRecorder
	isgomock struct{}
}

// MockPostWorkflowHooksCommandRunnerMockRecorder is the mock recorder for MockPostWorkflowHooksCommandRunner.
type MockPostWorkflowHooksCommandRunnerMockRecorder struct {
	mock *MockPostWorkflowHooksCommandRunner
}

// NewMockPostWorkflowHooksCommandRunner creates a new mock instance.
func NewMockPostWorkflowHooksCommandRunner(ctrl *gomock.Controller) *MockPostWorkflowHooksCommandRunner {
	mock := &MockPostWorkflowHooksCommandRunner{ctrl: ctrl}
	mock.recorder = &MockPostWorkflowHooksCommandRunnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostWorkflowHooksCommandRunner) EXPECT() *MockPostWorkflowHooksCommandRunnerMockRecorder {
	return m.recorder
}

// RunPostHooks mocks base method.
func (m *MockPostWorkflowHooksCommandRunner) RunPostHooks(ctx *command.Context, cmd *events.CommentCommand) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunPostHooks", ctx, cmd)
	ret0, _ := ret[0].(error)
	return ret0
}

// RunPostHooks indicates an expected call of RunPostHooks.
func (mr *MockPostWorkflowHooksCommandRunnerMockRecorder) RunPostHooks(ctx, cmd any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunPostHooks", reflect.TypeOf((*MockPostWorkflowHooksCommandRunner)(nil).RunPostHooks), ctx, cmd)
}
