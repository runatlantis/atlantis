// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/events (interfaces: PostWorkflowHookURLGenerator)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_post_workflow_hook_url_generator.go -package=mocks . PostWorkflowHookURLGenerator
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPostWorkflowHookURLGenerator is a mock of PostWorkflowHookURLGenerator interface.
type MockPostWorkflowHookURLGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockPostWorkflowHookURLGeneratorMockRecorder
	isgomock struct{}
}

// MockPostWorkflowHookURLGeneratorMockRecorder is the mock recorder for MockPostWorkflowHookURLGenerator.
type MockPostWorkflowHookURLGeneratorMockRecorder struct {
	mock *MockPostWorkflowHookURLGenerator
}

// NewMockPostWorkflowHookURLGenerator creates a new mock instance.
func NewMockPostWorkflowHookURLGenerator(ctrl *gomock.Controller) *MockPostWorkflowHookURLGenerator {
	mock := &MockPostWorkflowHookURLGenerator{ctrl: ctrl}
	mock.recorder = &MockPostWorkflowHookURLGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostWorkflowHookURLGenerator) EXPECT() *MockPostWorkflowHookURLGeneratorMockRecorder {
	return m.recorder
}

// GenerateProjectWorkflowHookURL mocks base method.
func (m *MockPostWorkflowHookURLGenerator) GenerateProjectWorkflowHookURL(hookID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateProjectWorkflowHookURL", hookID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateProjectWorkflowHookURL indicates an expected call of GenerateProjectWorkflowHookURL.
func (mr *MockPostWorkflowHookURLGeneratorMockRecorder) GenerateProjectWorkflowHookURL(hookID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateProjectWorkflowHookURL", reflect.TypeOf((*MockPostWorkflowHookURLGenerator)(nil).GenerateProjectWorkflowHookURL), hookID)
}
