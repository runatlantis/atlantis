// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/events (interfaces: WebhooksSender)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_webhooks_sender.go -package=mocks . WebhooksSender
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	webhooks "github.com/runatlantis/atlantis/server/events/webhooks"
	logging "github.com/runatlantis/atlantis/server/logging"
	gomock "go.uber.org/mock/gomock"
)

// MockWebhooksSender is a mock of WebhooksSender interface.
type MockWebhooksSender struct {
	ctrl     *gomock.Controller
	recorder *MockWebhooksSenderMockRecorder
	isgomock struct{}
}

// MockWebhooksSenderMockRecorder is the mock recorder for MockWebhooksSender.
type MockWebhooksSenderMockRecorder struct {
	mock *MockWebhooksSender
}

// NewMockWebhooksSender creates a new mock instance.
func NewMockWebhooksSender(ctrl *gomock.Controller) *MockWebhooksSender {
	mock := &MockWebhooksSender{ctrl: ctrl}
	mock.recorder = &MockWebhooksSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhooksSender) EXPECT() *MockWebhooksSenderMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockWebhooksSender) Send(log logging.SimpleLogging, res webhooks.ApplyResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", log, res)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockWebhooksSenderMockRecorder) Send(log, res any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockWebhooksSender)(nil).Send), log, res)
}
