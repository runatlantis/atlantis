// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/core/runtime/cache (interfaces: KeySerializer)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_key_serializer.go -package=mocks . KeySerializer
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	version "github.com/hashicorp/go-version"
	gomock "go.uber.org/mock/gomock"
)

// MockKeySerializer is a mock of KeySerializer interface.
type MockKeySerializer struct {
	ctrl     *gomock.Controller
	recorder *MockKeySerializerMockRecorder
	isgomock struct{}
}

// MockKeySerializerMockRecorder is the mock recorder for MockKeySerializer.
type MockKeySerializerMockRecorder struct {
	mock *MockKeySerializer
}

// NewMockKeySerializer creates a new mock instance.
func NewMockKeySerializer(ctrl *gomock.Controller) *MockKeySerializer {
	mock := &MockKeySerializer{ctrl: ctrl}
	mock.recorder = &MockKeySerializerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeySerializer) EXPECT() *MockKeySerializerMockRecorder {
	return m.recorder
}

// Serialize mocks base method.
func (m *MockKeySerializer) Serialize(key *version.Version) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Serialize", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Serialize indicates an expected call of Serialize.
func (mr *MockKeySerializerMockRecorder) Serialize(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Serialize", reflect.TypeOf((*MockKeySerializer)(nil).Serialize), key)
}
