// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/jobs (interfaces: ProjectJobURLGenerator)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_project_job_url_generator.go -package=mocks . ProjectJobURLGenerator
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	command "github.com/runatlantis/atlantis/server/events/command"
	gomock "go.uber.org/mock/gomock"
)

// MockProjectJobURLGenerator is a mock of ProjectJobURLGenerator interface.
type MockProjectJobURLGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockProjectJobURLGeneratorMockRecorder
	isgomock struct{}
}

// MockProjectJobURLGeneratorMockRecorder is the mock recorder for MockProjectJobURLGenerator.
type MockProjectJobURLGeneratorMockRecorder struct {
	mock *MockProjectJobURLGenerator
}

// NewMockProjectJobURLGenerator creates a new mock instance.
func NewMockProjectJobURLGenerator(ctrl *gomock.Controller) *MockProjectJobURLGenerator {
	mock := &MockProjectJobURLGenerator{ctrl: ctrl}
	mock.recorder = &MockProjectJobURLGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProjectJobURLGenerator) EXPECT() *MockProjectJobURLGeneratorMockRecorder {
	return m.recorder
}

// GenerateProjectJobURL mocks base method.
func (m *MockProjectJobURLGenerator) GenerateProjectJobURL(p command.ProjectContext) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateProjectJobURL", p)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateProjectJobURL indicates an expected call of GenerateProjectJobURL.
func (mr *MockProjectJobURLGeneratorMockRecorder) GenerateProjectJobURL(p any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateProjectJobURL", reflect.TypeOf((*MockProjectJobURLGenerator)(nil).GenerateProjectJobURL), p)
}
