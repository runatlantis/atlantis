// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/jobs (interfaces: ProjectStatusUpdater)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_project_status_updater.go -package=mocks . ProjectStatusUpdater
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	command "github.com/runatlantis/atlantis/server/events/command"
	models "github.com/runatlantis/atlantis/server/events/models"
	gomock "go.uber.org/mock/gomock"
)

// MockProjectStatusUpdater is a mock of ProjectStatusUpdater interface.
type MockProjectStatusUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockProjectStatusUpdaterMockRecorder
	isgomock struct{}
}

// MockProjectStatusUpdaterMockRecorder is the mock recorder for MockProjectStatusUpdater.
type MockProjectStatusUpdaterMockRecorder struct {
	mock *MockProjectStatusUpdater
}

// NewMockProjectStatusUpdater creates a new mock instance.
func NewMockProjectStatusUpdater(ctrl *gomock.Controller) *MockProjectStatusUpdater {
	mock := &MockProjectStatusUpdater{ctrl: ctrl}
	mock.recorder = &MockProjectStatusUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProjectStatusUpdater) EXPECT() *MockProjectStatusUpdaterMockRecorder {
	return m.recorder
}

// UpdateProject mocks base method.
func (m *MockProjectStatusUpdater) UpdateProject(ctx command.ProjectContext, cmdName command.Name, status models.CommitStatus, url string, res *command.ProjectResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProject", ctx, cmdName, status, url, res)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateProject indicates an expected call of UpdateProject.
func (mr *MockProjectStatusUpdaterMockRecorder) UpdateProject(ctx, cmdName, status, url, res any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProject", reflect.TypeOf((*MockProjectStatusUpdater)(nil).UpdateProject), ctx, cmdName, status, url, res)
}
